// __multiversion__
// This signals the loading code to prepend either #version 100 or #version 300 es as apropriate.

#include "fragmentVersionCentroid.h"

#if __VERSION__ >= 300
	#ifndef BYPASS_PIXEL_SHADER
		#if defined(TEXEL_AA) && defined(TEXEL_AA_FEATURE)
			_centroid in highp vec2 uv0;
			_centroid in highp vec2 uv1;
		#else
			_centroid in vec2 uv0;
			_centroid in vec2 uv1;
		#endif
	#endif
#else
	#ifndef BYPASS_PIXEL_SHADER
		varying vec2 uv0;
		varying vec2 uv1;
	#endif
#endif

varying vec4 color;
varying POS3 wPos;
#ifndef AS_ENTITY_RENDERER
	varying vec3 chunkPosition;
#endif

#ifdef FOG
varying vec4 fogColor;
#endif

#include "uniformShaderConstants.h"
#include "util.h"

LAYOUT_BINDING(0) uniform sampler2D TEXTURE_0;
LAYOUT_BINDING(1) uniform sampler2D TEXTURE_1;
LAYOUT_BINDING(2) uniform sampler2D TEXTURE_2;

void main()
{
#ifdef BYPASS_PIXEL_SHADER
	gl_FragColor = vec4(0, 0, 0, 0);
	return;
#else 

#if USE_TEXEL_AA
	vec4 diffuse = texture2D_AA(TEXTURE_0, uv0);
#else
	vec4 diffuse = texture2D(TEXTURE_0, uv0);
#endif
	
#ifdef SEASONS_FAR
	diffuse.a = 1.0;
#endif

#if USE_ALPHA_TEST
	#ifdef ALPHA_TO_COVERAGE
	#define ALPHA_THRESHOLD 0.05
	#else
	#define ALPHA_THRESHOLD 0.5
	#endif
	if(diffuse.a < ALPHA_THRESHOLD)
		discard;
#endif
	
vec4 inColor = color;

#if defined(BLEND)
	diffuse.a *= inColor.a;
#endif

#if !defined(ALWAYS_LIT)
	diffuse *= texture2D( TEXTURE_1, uv1 );
#endif

#ifndef SEASONS
	#if !USE_ALPHA_TEST && !defined(BLEND)
		diffuse.a = inColor.a;
	#endif
	
	diffuse.rgb *= inColor.rgb;
#else
	vec2 uv = inColor.xy;
	diffuse.rgb *= mix(vec3(1.0,1.0,1.0), texture2D( TEXTURE_2, uv).rgb*2.0, inColor.b);
	diffuse.rgb *= inColor.aaa;
	diffuse.a = 1.0;
#endif
//=*=mob-spawn-area rendering=*=
#if !defined(BLEND) && !defined(ALPHA_TEST)
	vec4 scol0 = vec4(1.0, 0.25, 0.0, 0.5);
	vec4 scol1 = vec4(0.75, 0.5, 0.0, 0.3);
	vec4 dcol = vec4(0.0, 0.5, 1.0, 0.5);

	bool sf = false;
	float dist = length(wPos);
	float lf = max(step(24.,dist)-smoothstep(24.,24.3,dist),smoothstep(53.5,54.,dist)-step(54.,dist));
	if(texture2D( TEXTURE_1, vec2(0,1) ).r > .416){
		//day
		if(uv1.y<0.438&&uv1.x<0.43)sf = true;
	}else{
		//night
		if(uv1.x<0.43)sf = true;
	}
	scol0 = mix(scol1,scol0,step(24.,dist)-step(54.,dist));
	diffuse.rgb = mix(diffuse.rgb,scol0.rgb,scol0.a*float(sf));
	diffuse.rgb = mix(diffuse.rgb,dcol.rgb,dcol.a*lf);
#endif
//=*=*=





#ifdef FOG
	diffuse.rgb = mix( diffuse.rgb, fogColor.rgb, fogColor.a );
#endif

#ifndef AS_ENTITY_RENDERER
	diffuse.rgb = mix(vec3(1.0), diffuse.rgb, smoothstep(0.0, 2.0, chunkPosition * 16.0));//all the chunk visualizing is here
#endif





	gl_FragColor = diffuse;
	
#endif // BYPASS_PIXEL_SHADER
}
